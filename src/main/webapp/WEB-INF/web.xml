<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xmlns="http://java.sun.com/xml/ns/javaee" 
xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" 
xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" 
id="WebApp_ID" version="2.5">

	<display-name>sources-system</display-name>
	<welcome-file-list>
		<welcome-file>open/login.jsp</welcome-file>
	</welcome-file-list>
	<session-config>
		<session-timeout>300</session-timeout>
	</session-config>


	<!--释放资源-->

	<!--HiFilter-->
  	<filter>
	   <filter-name>hifilter</filter-name>
	   <filter-class>com.ylz.packcommon.filter.HiFilter</filter-class>
	</filter>
	<filter-mapping>
	   <filter-name>hifilter</filter-name>
	    <url-pattern>/*</url-pattern>
	</filter-mapping>


	<!-- 加载logback配置文件 -->
	<context-param>
		<param-name>logbackConfigLocation</param-name>
		<param-value>logback.xml</param-value>
	</context-param>

	<!-- cxf配置-->
	<servlet>
		<servlet-name>CXFServlet</servlet-name>
		<servlet-class>org.apache.cxf.transport.servlet.CXFServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>CXFServlet</servlet-name>
		<url-pattern>/webService/*</url-pattern>
	</servlet-mapping>


	<!-- hibernate配置 -->
	<filter>
		<filter-name>openSessionInViewFilter</filter-name>
		<filter-class>org.springframework.orm.hibernate5.support.OpenSessionInViewFilter</filter-class>
		<init-param>
			<param-name>sessionFactoryBeanName</param-name>
			<param-value>sessionFactory</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>openSessionInViewFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<filter>
		<filter-name>openSessionInViewFilterRead</filter-name>
		<filter-class>org.springframework.orm.hibernate5.support.OpenSessionInViewFilter</filter-class>
		<init-param>
			<param-name>sessionFactoryBeanName</param-name>
			<param-value>sessionFactoryRead</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>openSessionInViewFilterRead</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<filter>
		<filter-name>CrossOrigin</filter-name>
		<filter-class>com.ylz.packcommon.filter.CrossOriginFilter</filter-class>
		<init-param>
			<param-name>AccessControlAllowOrigin</param-name>
			<param-value>*</param-value>
		</init-param>
		<init-param>
			<param-name>AccessControlAllowMethods</param-name>
			<param-value>POST, GET, DELETE, PUT</param-value>
		</init-param>
		<init-param>
			<param-name>AccessControlMaxAge</param-name>
			<param-value>3628800</param-value>
		</init-param>
		<init-param>
			<param-name>AccessControlAllowHeaders</param-name>
			<param-value>x-requested-with</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>CrossOrigin</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- struts2配置 -->
	<filter>
		<filter-name>struts-prepare</filter-name>
		<filter-class>com.ylz.packcommon.filter.MyStrutsFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>struts-prepare</filter-name>
		<url-pattern>*.action</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>struts-prepare</filter-name>
		<url-pattern>*.jsp</url-pattern>
	</filter-mapping>

	<filter>
		<filter-name>struts-execute</filter-name>
		<filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsExecuteFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>struts-execute</filter-name>
		<url-pattern>*.action</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>struts-execute</filter-name>
		<url-pattern>*.jsp</url-pattern>
	</filter-mapping>


	<!-- 配置spring -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:spring/*.xml</param-value>
	</context-param>
	<listener>
		<listener-class>
			org.springframework.web.context.ContextLoaderListener
		</listener-class>
	</listener>
	<listener>
		<listener-class>
			org.springframework.web.context.request.RequestContextListener
		</listener-class>
	</listener>
	<!--Kaptcha配置-->
	<servlet>
		<servlet-name>Kaptcha</servlet-name>
		<servlet-class>com.google.code.kaptcha.servlet.KaptchaServlet</servlet-class>
		<init-param>
			<param-name>kaptcha.textproducer.font.color</param-name>
			<param-value>black</param-value>
		</init-param>
		<init-param>
			<param-name>kaptcha.textproducer.font.size</param-name>
			<param-value>24</param-value>
		</init-param>
		<init-param>
			<param-name>kaptcha.image.width</param-name>
			<param-value>90</param-value>
		</init-param>
		<init-param>
			<param-name>kaptcha.image.height</param-name>
			<param-value>25</param-value>
		</init-param>
		<init-param>
			<param-name>kaptcha.border</param-name>
			<param-value>no</param-value>
		</init-param>
		<init-param>
			<param-name>kaptcha.border.thickness</param-name>
			<param-value>0</param-value>
		</init-param>
		<init-param>
			<param-name>kaptcha.producer.impl</param-name>
			<param-value>com.google.code.kaptcha.impl.DefaultKaptcha </param-value>
		</init-param>
		<init-param>
			<param-name>kaptcha.textproducer.impl</param-name>
			<param-value>com.google.code.kaptcha.text.impl.DefaultTextCreator</param-value>
		</init-param>
		<init-param>
			<param-name>kaptcha.noise.impl</param-name>
			<param-value>com.google.code.kaptcha.impl.NoNoise </param-value>
		</init-param>
		<init-param>
			<param-name>kaptcha.noise.color</param-name>
			<param-value>black</param-value>
		</init-param>
		<init-param>
			<param-name>kaptcha.obscurificator.impl</param-name>
			<param-value>com.google.code.kaptcha.impl.ShadowGimpy</param-value>
		</init-param>
		<init-param>
			<param-name>kaptcha.background.impl</param-name>
			<param-value>com.google.code.kaptcha.impl.DefaultBackground</param-value>
		</init-param>
		<init-param>
			<param-name>kaptcha.background.clear.from</param-name>
			<param-value>white</param-value>
		</init-param>
		<init-param>
			<param-name>kaptcha.background.clear.to</param-name>
			<param-value>white</param-value>
		</init-param>
		<init-param>
			<param-name>kaptcha.textproducer.char.length</param-name>
			<param-value>4</param-value>
		</init-param>
		<init-param>
			<param-name>kaptcha.textproducer.char.string</param-name>
			<param-value>0123456789</param-value>
		</init-param>
		<init-param>
			<param-name>kaptcha.textproducer.char.space</param-name>
			<param-value>3</param-value>
		</init-param>
		<init-param>
			<param-name>kaptcha.textproducer.font.names</param-name>
			<param-value>宋体</param-value>
		</init-param>
	</servlet>
	<servlet-mapping>
		<servlet-name>Kaptcha</servlet-name>
		<url-pattern>/kaptcha</url-pattern>
	</servlet-mapping>

	<servlet>
		<servlet-name>fileServlet</servlet-name>
		<servlet-class>com.ylz.view.sign.servlet.FileServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>fileServlet</servlet-name>
		<url-pattern>/intercept/sign/assessment/fileServlet</url-pattern>
	</servlet-mapping>
</web-app>